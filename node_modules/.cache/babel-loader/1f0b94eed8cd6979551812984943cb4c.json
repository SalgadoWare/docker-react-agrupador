{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alejandro\\\\Desktop\\\\react\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Header from \"./components/Header\";\nimport ListaItems from \"./components/ListaItems\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  let info = [{\n    \"id\": \"A\",\n    \"texto\": 'a'\n  }, {\n    \"id\": \"B\",\n    \"texto\": 'b'\n  }, {\n    \"id\": \"C\",\n    \"texto\": 'c'\n  }, {\n    \"id\": \"D\",\n    \"texto\": 'd'\n  }, {\n    \"id\": \"E\",\n    \"texto\": 'e'\n  }];\n  let [infoApp, updateInfo] = useState(info);\n  function appChangesText(_id, _texto) {\n    let newElement = {\n      \"id\": _id,\n      \"texto\": _texto\n    };\n    return updateInfo(prev => prev.map((el, i) => {\n      console.log(i + ' ' + el.id + ' ' + el.texto);\n      if (i == newElement.id) {\n        console.log(newElement.texto);\n        el.texto = el.texto + '\\n' + newElement.texto;\n        return el;\n      }\n      return el;\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AGRUPADOR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      appChangesText: appChangesText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divListaItems\",\n      children: /*#__PURE__*/_jsxDEV(ListaItems, {\n        _info: infoApp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n/*La funcion devuelve código JSX*/\n/*importante: en JSX todos los elementos deben tener un PADRE */\n/*className=\"container\" class es una palabra reservada, en JSX se usa className*/\n_s(App, \"N+LlOcMSMi8caFsEheYmiAVg1Ok=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","ListaItems","useState","App","info","infoApp","updateInfo","appChangesText","_id","_texto","newElement","prev","map","el","i","console","log","id","texto"],"sources":["C:/Users/Alejandro/Desktop/react/my-app/src/App.js"],"sourcesContent":["import Header from \"./components/Header\"\r\nimport ListaItems from \"./components/ListaItems\"\r\nimport {useState} from 'react'\r\n\r\n\r\nfunction App(){\r\n\r\n    let info = [\r\n        {\"id\":\"A\",\"texto\":'a'},\r\n        {\"id\":\"B\",\"texto\":'b'},\r\n        {\"id\":\"C\",\"texto\":'c'},\r\n        {\"id\":\"D\",\"texto\":'d'},\r\n        {\"id\":\"E\",\"texto\":'e'}\r\n    ]\r\n\r\n    let [infoApp,updateInfo] = useState(info)\r\n\r\n \r\n\r\n    function appChangesText(_id,_texto){\r\n        let newElement = {\"id\":_id,\"texto\":_texto}\r\n        return (\r\n            updateInfo((prev) => prev.map((el, i) => {\r\n                console.log(i + ' ' + el.id + ' ' + el.texto)\r\n              if (i == newElement.id) {\r\n                console.log(newElement.texto)\r\n                el.texto=el.texto + '\\n' + newElement.texto\r\n                return el;\r\n              }\r\n              return el;\r\n            })\r\n        )\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n        <div><h1>AGRUPADOR</h1></div>\r\n        <Header appChangesText={appChangesText}/>\r\n        <div className=\"divListaItems\"> \r\n        <ListaItems _info={infoApp}/>\r\n        </div>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n/*La funcion devuelve código JSX*/\r\n/*importante: en JSX todos los elementos deben tener un PADRE */\r\n/*className=\"container\" class es una palabra reservada, en JSX se usa className*/\r\nexport  default App\r\n\r\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,SAAQC,QAAQ,QAAO,OAAO;AAAA;AAAA;AAG9B,SAASC,GAAG,GAAE;EAAA;EAEV,IAAIC,IAAI,GAAG,CACP;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC;EAAG,CAAC,EACtB;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC;EAAG,CAAC,EACtB;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC;EAAG,CAAC,EACtB;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC;EAAG,CAAC,EACtB;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC;EAAG,CAAC,CACzB;EAED,IAAI,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGJ,QAAQ,CAACE,IAAI,CAAC;EAIzC,SAASG,cAAc,CAACC,GAAG,EAACC,MAAM,EAAC;IAC/B,IAAIC,UAAU,GAAG;MAAC,IAAI,EAACF,GAAG;MAAC,OAAO,EAACC;IAAM,CAAC;IAC1C,OACIH,UAAU,CAAEK,IAAI,IAAKA,IAAI,CAACC,GAAG,CAAC,CAACC,EAAE,EAAEC,CAAC,KAAK;MACrCC,OAAO,CAACC,GAAG,CAACF,CAAC,GAAG,GAAG,GAAGD,EAAE,CAACI,EAAE,GAAG,GAAG,GAAGJ,EAAE,CAACK,KAAK,CAAC;MAC/C,IAAIJ,CAAC,IAAIJ,UAAU,CAACO,EAAE,EAAE;QACtBF,OAAO,CAACC,GAAG,CAACN,UAAU,CAACQ,KAAK,CAAC;QAC7BL,EAAE,CAACK,KAAK,GAACL,EAAE,CAACK,KAAK,GAAG,IAAI,GAAGR,UAAU,CAACQ,KAAK;QAC3C,OAAOL,EAAE;MACX;MACA,OAAOA,EAAE;IACX,CAAC,CAAC,CACL;EAEL;EAEA,oBAEI;IAAA,wBACA;MAAA,uBAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAM,eAC7B,QAAC,MAAM;MAAC,cAAc,EAAEN;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,eACzC;MAAK,SAAS,EAAC,eAAe;MAAA,uBAC9B,QAAC,UAAU;QAAC,KAAK,EAAEF;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACvB;EAAA,gBACH;AAIX;AACA;AACA;AACA;AAAA,GA7CSF,GAAG;AAAA,KAAHA,GAAG;AA8CZ,eAAgBA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module"}